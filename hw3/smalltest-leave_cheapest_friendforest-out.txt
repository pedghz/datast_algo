> # Simple test with just three employees
> add 'A' a 'Worker' 1
> add 'B' b 'Worker' 2
> add 'C' c 'Worker' 3
> add_friend a b 1
> add_friend b c 2
> friends_of b
id a : Worker A, salary 1 (cost 1)
id c : Worker C, salary 3 (cost 2)
> leave_cheapest_friendforest
Remaining friend forest has 1 trees with the total cost of 3
> all_friendships
a - b
b - c
> add_friend a c 1
> leave_cheapest_friendforest
Remaining friend forest has 1 trees with the total cost of 2
> all_friendships
a - b
a - c
> clear
Cleared all persons
> # Read example in assignment description
> read 'example-data.txt'
** Commands from 'example-data.txt'
> # Adding people
> add 'Meikkis Matti' mm 'basic worker' 2000
> add 'Teikkis Terttu' tt 'technical evangelist' 4000
> add 'Miljoona Miikka' richbastard 'commander' 1000000
> add 'Sorrettu Sami' doesall 'general utility' 1
> add 'Keskiverto Keijo' kk1 'basic worker' 3000
> add 'Kukalie Kirsi' kk2 'basic worker' 2500
> add 'Olematon Oskari' nobody 'useless' 6000
> # Adding boss relationships
> add_boss mm richbastard
> add_boss doesall mm
> add_boss nobody mm
> add_boss tt richbastard
> add_boss kk1 tt
> add_boss kk2 tt
> # Add friendships
> add_friend doesall nobody 1
> add_friend mm doesall 3
> add_friend tt mm 5
> add_friend tt kk2 2
> add_friend kk1 nobody 1
> add_friend kk2 kk1 2
> add_friend kk2 mm 4
> add_friend richbastard mm 8
> add_friend richbastard tt 2
> 
** End of commands from 'example-data.txt'
> leave_cheapest_friendforest
Remaining friend forest has 1 trees with the total cost of 11
> all_friendships
doesall - mm
doesall - nobody
kk1 - kk2
kk1 - nobody
kk2 - tt
richbastard - tt
> clear
Cleared all persons
> 
